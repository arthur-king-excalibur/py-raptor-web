# Generated by Django 4.2.7 on 2023-12-03 15:59

from django.db import migrations, models
import django_resized.forms


class Migration(migrations.Migration):

    dependencies = [
        ('raptormc', '0056_siteinformation_collapse_network_rules_when_accessing_server_rules'),
    ]

    operations = [
        migrations.AlterField(
            model_name='defaultpages',
            name='members',
            field=models.BooleanField(default=True, help_text='Whether the default Site Members list page is enabled or not. This will also prevent non-admin users from accessing any profiles except for their own.', verbose_name='Site Members Page'),
        ),
        migrations.AlterField(
            model_name='defaultpages',
            name='onboarding',
            field=models.BooleanField(default=True, help_text='Whether the default pages that contain all information about each server are enabled or not.', verbose_name='Onboarding Pages'),
        ),
        migrations.AlterField(
            model_name='siteinformation',
            name='avatar_image',
            field=django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='WEBP', help_text='The image displayed in OpenGraph embeds, such as when a link is pasted to a Discord Channel or a Twitter post. This should be a 1x1 ratio image. This will also be used as your Favicon, after being converted to a .ico file.', keep_meta=False, quality=100, scale=None, size=[500, 500], upload_to='avatar', verbose_name='Avatar Image'),
        ),
        migrations.AlterField(
            model_name='siteinformation',
            name='background_image',
            field=django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='WEBP', help_text='The image displayed layered behind server buttons. This image will cover the defined Secondary Color if used. Image will be resized to 1920x1080 after uploading.', keep_meta=False, quality=90, scale=None, size=[1920, 1080], upload_to='background', verbose_name='Background Image'),
        ),
        migrations.AlterField(
            model_name='siteinformation',
            name='branding_image',
            field=django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='WEBP', help_text='The image displayed in the website Navigation Bar as a link to the homepage. Image will be resized to 550x170 after uploading.', keep_meta=False, quality=50, scale=None, size=[550, 170], upload_to='branding', verbose_name='Branding Image'),
        ),
        migrations.AlterField(
            model_name='siteinformation',
            name='collapse_network_rules_when_accessing_server_rules',
            field=models.BooleanField(default=True, help_text='If this is un-checked, the Network Rules section on the Rules page will NOT be collapsed when accessing Rules from a Server Modal.', verbose_name='Collapse Network Rules section if accessing Rules page from a Server modal link.'),
        ),
        migrations.AlterField(
            model_name='siteinformation',
            name='contact_email',
            field=models.EmailField(blank=True, default='', help_text='Email to be linked with a mailto link in the footer of the website.', max_length=500, verbose_name='Contact Email'),
        ),
        migrations.AlterField(
            model_name='siteinformation',
            name='discord_global_announcement_channel',
            field=models.CharField(default='0', help_text='Set this to the ID for the Discord Channel that the Bot will be looking for global announcements from.', max_length=500, verbose_name='Global Announcements Discord Channel ID'),
        ),
        migrations.AlterField(
            model_name='siteinformation',
            name='discord_guild',
            field=models.CharField(default='0', help_text='Set this to the ID for the Discord Guild that the Bot will be linked to. The bot will be able to read announcements and send server information messages here.', max_length=500, verbose_name='Discord Guild ID.'),
        ),
        migrations.AlterField(
            model_name='siteinformation',
            name='discord_staff_role',
            field=models.CharField(default='0', help_text='Set this to the ID for the Discord Role that the Bot will read messages from as announcements. Discord Users without this role will not be able to create announcements. ', max_length=500, verbose_name='Discord Staff Role ID.'),
        ),
        migrations.AlterField(
            model_name='siteinformation',
            name='enable_footer_credit',
            field=models.BooleanField(default=True, help_text='If this is checked, a link to the raptor-web repository will appear in the footer. ', verbose_name='Enable Credits in Footer'),
        ),
        migrations.AlterField(
            model_name='siteinformation',
            name='enable_server_query',
            field=models.BooleanField(default=True, help_text="If this is un-checked, the address/port of created Servers will NOT be, queried for state and player data. Each server's information will still be displayed on the website as normal, however the Player Counts section of the Header Box will no longer appear, or the server status indicators.", verbose_name='Enable server querying and player counts section'),
        ),
        migrations.AlterField(
            model_name='siteinformation',
            name='meta_description',
            field=models.CharField(blank=True, default='', help_text='The description for your website provided in search engine results. This will apply to all pages that do not override.', max_length=500, verbose_name='Meta Description'),
        ),
        migrations.AlterField(
            model_name='siteinformation',
            name='meta_keywords',
            field=models.CharField(blank=True, default='', help_text='A series of comma-separated values that represent meta keywords used in search engine results. This will apply to all pages that do not override.', max_length=500, verbose_name='Meta Keywords'),
        ),
        migrations.AlterField(
            model_name='siteinformation',
            name='require_login_for_user_list',
            field=models.BooleanField(default=True, help_text='If this is checked, users will need to create an account and, log in before they can access the Site Members list.', verbose_name='Require login to access Site Members'),
        ),
        migrations.AlterField(
            model_name='siteinformation',
            name='secondary_color',
            field=models.CharField(default='#00233c', help_text='The hex color code used for the upper body of the website, layered underneath server buttons. If using a Background Image, that will always override this color.', max_length=7, verbose_name='Secondary Color'),
        ),
        migrations.AlterField(
            model_name='siteinformation',
            name='server_pagination_count',
            field=models.IntegerField(default=6, help_text='How many server buttons will appear per page. If the amount of Servers exceeds this amount, a set if Next and Previous buttons will appear to cycle between pages of created servers.', verbose_name='Server buttons per-page'),
        ),
        migrations.AlterField(
            model_name='siteinformation',
            name='use_main_color',
            field=models.BooleanField(default=True, help_text='If this is checked, the Main Color chosen above will be used on the website.', verbose_name='Use Main Color'),
        ),
        migrations.AlterField(
            model_name='siteinformation',
            name='use_secondary_color',
            field=models.BooleanField(default=True, help_text='If this is checked, the Secondary Color chosen above will be used on the website. If you are using a Background Image, that will always take precedence.', verbose_name='Use Secondary Color'),
        ),
    ]
